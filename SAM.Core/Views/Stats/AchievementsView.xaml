<UserControl x:Class="SAM.Core.Views.AchievementsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:vm="clr-namespace:SAM.Core.ViewModels"
             xmlns:stats="clr-namespace:SAM.Core.Stats"
             xmlns:converters="clr-namespace:SAM.Core.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type vm:SteamGameViewModel}, IsDesignTimeCreatable=False}">

    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.datagrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/controls.expander.xaml" />
                <ResourceDictionary Source="pack://application:,,,/SAM.Core;component/Styles/AllResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dxmvvm:BooleanToObjectConverter x:Key="UnlockedConverter" TrueValue="Unlocked" FalseValue="Locked" />
            <Style x:Key="GroupHeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}, Path=(mah:HeaderedControlHelper.HeaderForeground)}" />
            </Style>
            <CollectionViewSource x:Key="AchievementCollection" Source="{Binding Achievements}" IsLiveGroupingRequested="True">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="OriginalLockState" />
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="OriginalLockState" Direction="Ascending" />
                    <scm:SortDescription PropertyName="Name" Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <DataGrid ItemsSource="{Binding Source={StaticResource AchievementCollection}}"
                  AutoGenerateColumns="False" HeadersVisibility="None"
                  CanUserAddRows="False" SelectionMode="Single"
                  EnableRowVirtualization="False" EnableColumnVirtualization="False">
            <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Padding" Value="1" />
                        <Setter Property="Foreground" Value="{StaticResource TextFillColorLightPrimary}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=OneWayToSource}" />
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <Grid>
                                    <StackPanel Margin="2">
                                        <TextBlock Text="{Binding Name}" FontWeight="Bold" Margin="2" />
                                        <TextBlock Text="{Binding Description}" TextWrapping="Wrap" FontStyle="Italic" />
                                        <Separator Margin="0,6,0,4"
                                                   Visibility="{Binding IsModified, Converter={StaticResource BoolToVisConverter}}" />
                                        <TextBlock Text="Unsaved change."
                                                   Visibility="{Binding IsModified, Converter={StaticResource BoolToVisConverter}}">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteOrangeColor}" />
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource TextFillColorLightPrimary}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource PaletteLightBlueColor}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Padding" Value="0" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsModified}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorLightPrimary}" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding IsSelected}" Value="False" />
                                    <Condition Binding="{Binding IsModified}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorLightPrimary}" />
                                <Setter Property="Background" Value="{DynamicResource PaletteLightBlueColor}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding IsModified}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorLightPrimary}" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.7" Color="{DynamicResource PaletteOrangeColor}" />
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                    <Condition Binding="{Binding IsModified}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorLightPrimary}" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.9" Color="{DynamicResource PaletteOrangeColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextFillColorLightPrimary}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn HeaderStyle="{StaticResource CenteredGridHeaderStyle}"
                                        Binding="{Binding IsAchieved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        Width="50">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                        <Grid>
                                            <CheckBox IsChecked="{Binding IsAchieved, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      Margin="4,4,4,4" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridTemplateColumn Header="" IsReadOnly="True" CanUserSort="False" Width="SizeToCells">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type stats:SteamAchievement}">
                            <Border BorderThickness="2" BorderBrush="Black" Padding="0" Margin="0">
                                <Grid Width="40" Height="40">
                                    <Image Source="{Binding Image, Mode=OneWay, Converter={converters:BitmapToImageSourceConverter}}" Margin="-1" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="ID" Binding="{Binding Id, Mode=OneWay}"
                                    HeaderStyle="{StaticResource CenteredGridHeaderStyle}"
                                    CellStyle="{StaticResource CenterAlignedCellStyle}"
                                    Width="100" Visibility="Collapsed" />
                <DataGridTemplateColumn Header="Description" Width="*"
                                        HeaderStyle="{StaticResource CenteredGridHeaderStyle}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type stats:SteamAchievement}">
                            <Grid Margin="6,3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <TextBlock Text="{Binding Name, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                               FontWeight="SemiBold" FontSize="{StaticResource LargeFontSize}"
                                               Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Foreground}" />
                                </Grid>
                                <Grid Grid.Row="1">
                                    <TextBlock Text="{Binding Description, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                               TextWrapping="Wrap" FontSize="{StaticResource SmallFontSize}"
                                               Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Foreground}" />
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
