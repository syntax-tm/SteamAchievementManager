<UserControl x:Class="SAM.Views.LibraryItemsControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:sam="urn:sam"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             mc:Ignorable="d" 
             DataContext="{dxmvvm:ViewModelSource Type=sam:HomeViewModel}"
             d:DataContext="{d:DesignInstance Type=sam:HomeViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Wpf.Ui;component/Styles/Assets/StaticColors.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--<sam:GroupStyleSelector x:Key="CustomGroupStyleSelector" 
                                    NoGroupHeaderStyle="{StaticResource NoGroupHeaderStyle}" 
                                    DefaultGroupStyle="{StaticResource DefaultGroupHeaderStyle}" />-->
            <!--<Style TargetType="{x:Type Separator}">
                <Setter Property="Opacity" Value="0.4" />
                <Setter Property="Margin" Value="0,-2,0,-2" />
            </Style>-->
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <ui:VirtualizingItemsControl x:Name="libraryItemsView" ItemsSource="{Binding ItemsView}"
                                      HorizontalContentAlignment="Center">
            <ui:VirtualizingItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <ui:VirtualizingWrapPanel SpacingMode="Uniform" Orientation="Vertical" StretchItems="False" VirtualizationMode="Recycling"
                                              IsVirtualizing="True" />
                </ItemsPanelTemplate>
            </ui:VirtualizingItemsControl.ItemsPanel>
            <ui:VirtualizingItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Control.MaxHeight" Value="100" />
                </Style>
            </ui:VirtualizingItemsControl.ItemContainerStyle>
            <ui:VirtualizingItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type sam:SteamApp}">
                    <Grid>
                        <ui:Button Padding="0">
                            <ui:Button.Resources>
                                <sam:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
                            </ui:Button.Resources>
                            <ui:Button.Style>
                                <Style TargetType="{x:Type ui:Button}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="ToolTip" Value="{Binding Name}" />
                                    <Setter Property="Foreground" Value="{StaticResource TextFillColorLightPrimaryBrush}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                                    <Setter Property="BorderThickness" Value="3" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource AccentSemiTransparentBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource AccentTransparentBrush}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Data, Source={StaticResource BindingProxy}}" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource AccentTransparentBrush}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Header}" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource AccentPrimaryBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ui:Button.Style>
                            <ui:Button.ContextMenu>
                                <ContextMenu IsOpen="{Binding Data, Source={StaticResource BindingProxy}, Mode=OneWayToSource}">
                                    <!-- ReSharper disable Xaml.RedundantResource -->
                                    <ui:MenuItem Header="{Binding Name}" IsEnabled="False" Margin="0,5,0,0">
                                        <ui:MenuItem.HeaderTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock Text="{Binding}" FontWeight="SemiBold"
                                                               HorizontalAlignment="Center" />
                                                </Grid>
                                            </DataTemplate>
                                        </ui:MenuItem.HeaderTemplate>
                                    </ui:MenuItem>
                                    <Separator />
                                    <ui:MenuItem Header="Open in Manager" Command="{Binding ManageAppCommand}"
                                                 SymbolIcon="AppGeneric24" SymbolIconFilled="False" />
                                    <Separator />
                                    <ui:MenuItem Command="{Binding ToggleFavoriteCommand}" SymbolIconFilled="False">
                                        <ui:MenuItem.Style>
                                            <Style TargetType="{x:Type ui:MenuItem}">
                                                <Setter Property="Header" Value="Remove from Favorites" />
                                                <Setter Property="SymbolIcon" Value="HeartBroken24" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsFavorite}" Value="False">
                                                        <Setter Property="Header" Value="Add to Favorites" />
                                                        <Setter Property="SymbolIcon" Value="Heart24" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ui:MenuItem.Style>
                                    </ui:MenuItem>
                                    <ui:MenuItem Command="{Binding ToggleVisibilityCommand}" SymbolIconFilled="False">
                                        <ui:MenuItem.Style>
                                            <Style TargetType="{x:Type ui:MenuItem}">
                                                <Setter Property="Header" Value="Hide" />
                                                <Setter Property="SymbolIcon" Value="EyeOff24" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                                        <Setter Property="Header" Value="Show" />
                                                        <Setter Property="SymbolIcon" Value="Eye24" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ui:MenuItem.Style>
                                    </ui:MenuItem>
                                    <Separator />
                                    <ui:MenuItem Header="View on SteamDB" Command="{Binding ViewOnSteamDBCommand}"
                                                 SymbolIcon="Database20" />
                                    <ui:MenuItem Header="View on Steam Store" Command="{Binding ViewOnSteamCommand}"
                                                 SymbolIcon="ShoppingBag16" />
                                    <ui:MenuItem Header="View on PCGamingWiki" Command="{Binding ViewOnPCGWCommand}"
                                                 SymbolIcon="Server20" />
                                    <ui:MenuItem Header="View on Steam Card Exchange" Command="{Binding ViewOnSteamCardExchangeCommand}"
                                                 SymbolIcon="ArrowSwap20" />
                                    <Separator />
                                    <ui:MenuItem Header="Copy Steam ID" Command="{Binding CopySteamIDCommand}"
                                                 SymbolIcon="Copy20" />
                                    <!-- ReSharper restore Xaml.RedundantResource -->
                                </ContextMenu>
                            </ui:Button.ContextMenu>
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding ManageAppCommand}" />
                            </dxmvvm:Interaction.Behaviors>
                            <Grid>
                                <Image x:Name="HeaderImage" Source="{Binding Header, Converter={sam:BitmapToImageSourceConverter}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Data, Source={StaticResource BindingProxy}}" Value="True">
                                                    <Setter Property="Opacity" Value="0.25" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ui:Button}}}" Value="True">
                                                    <Setter Property="Opacity" Value="0.75" />
                                                </DataTrigger>
                                                <!--<DataTrigger Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ui:Button}}}" Value="True">
                                                        <Setter Property="Opacity" Value="0.25" />
                                                    </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding Name}" 
                                           FontSize="30" TextAlignment="Center" Margin="10" TextWrapping="Wrap">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Header}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </ui:Button>
                    </Grid>
                </DataTemplate>
            </ui:VirtualizingItemsControl.ItemTemplate>
        </ui:VirtualizingItemsControl>
    </Grid>
</UserControl>
